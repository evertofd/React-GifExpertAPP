{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","Container","onSubmit","e","preventDefault","trim","length","cats","type","className","value","onChange","target","GifGridItem","title","url","Col","md","style","marginBottom","Card","Img","variant","src","alt","height","Body","Title","fontWeight","textTransform","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","Row","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,cAACC,EAAA,EAAD,UACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCP,EAAc,OAMd,SACE,uBACEQ,KAAK,OACLC,UAAU,sCACVC,MAAOX,EACPY,SAnBkB,SAACR,GACzBH,EAAcG,EAAES,OAAOF,e,sBCHdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAAEC,aAAc,QAAnC,SACE,eAACC,EAAA,EAAD,CAAMX,UAAU,0FAAhB,UACE,cAACW,EAAA,EAAKC,IAAN,CACEC,QAAQ,MACRC,IAAKR,EACLS,IAAKV,EACLI,MAAO,CAAEO,OAAQ,WAEnB,cAACL,EAAA,EAAKM,KAAN,UACE,cAACN,EAAA,EAAKO,MAAN,CACET,MAAO,CACLO,OAAQ,OACRG,WAAY,MACZC,cAAe,cAJnB,SAOGf,Y,yBCtBAgB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfjB,EADe,iDACiCkB,UACpDF,GAFmB,+DAIFG,MAAMnB,GAJJ,cAIfoB,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACT3B,MAAO0B,EAAK1B,MACZC,IAAG,UAAEyB,EAAKE,cAAP,aAAE,EAAaC,iBAAiB5B,QAVlB,kBAcduB,GAdc,4CAAH,sD,QCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BjC,mBAAS,CACjCuC,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAEjC,CAACd,IAEGe,EDVmBK,CAAapB,GAA/BM,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,QAEd,OACE,gCACE,eAAC5C,EAAA,EAAD,CAAWQ,UAAU,8DAArB,UACE,6BAAKsB,IACJc,GAAW,2CAGd,cAAC5C,EAAA,EAAD,UACE,cAACmD,EAAA,EAAD,UACGf,EAAKE,KAAI,SAACc,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIZ,eEZrBa,G,MAAe,WAC1B,MAAoCxD,mBAAS,CAAC,WAA9C,mBAAOyD,EAAP,KAAmB1D,EAAnB,KAEA,OACE,qCACE,oBAAIY,UAAU,mBAAd,0BACA,cAAC,EAAD,CAAaZ,cAAeA,IAC5B,uBACA,6BACG0D,EAAWhB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,a,MCRxByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f3fe2ade.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue(\" \");\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </form>\n    </Container>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <Col md={3} style={{ marginBottom: \"20px\" }}>\n      <Card className=\"shadow-lg p-3 mb-5 bg-white rounded animate__animated animate__bounce animate__bounceIn\">\n        <Card.Img\n          variant=\"top\"\n          src={url}\n          alt={title}\n          style={{ height: \"238px\" }}\n        />\n        <Card.Body>\n          <Card.Title\n            style={{\n              height: \"30px\",\n              fontWeight: \"900\",\n              textTransform: \"capitalize\",\n            }}\n          >\n            {title}\n          </Card.Title>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=12&api_key=mVQrxB1cOPSWC90V0qNOS8ivtofwM9Kq`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((item) => {\n    return {\n      id: item.id,\n      title: item.title,\n      url: item.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { Row, Container } from \"react-bootstrap\";\nexport const GifGrid = ({ category }) => {\n  const { data, loading } = useFetchGifs(category);\n\n  return (\n    <div>\n      <Container className=\"rounded animate__animated animate__bounce animate__bounceIn\">\n        <h1>{category}</h1>\n        {loading && <p>Loading</p>}\n      </Container>\n      \n      <Container>\n        <Row>\n          {data.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({ data: imgs, loading: false });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Homero']);\n\n  return (\n    <>\n      <h1 className=\"mb-5 text-center\">GifExpertApp</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}